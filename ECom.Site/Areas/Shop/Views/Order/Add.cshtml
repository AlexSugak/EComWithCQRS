@using ECom.Site.Helpers
@using ECom.Site.Models
@using ECom.Messages
@using MvcContrib.UI.Grid;
@using MvcContrib.UI.Pager;
@using MvcContrib.Pagination;
@using ECom.Site.Areas.Shop.Models;

@model AddNewOrderViewModel

@{
    ViewBag.Title = "Add new order";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
}

@helper PriceEditor()
{
	<div class="input-prepend">
		<span class="add-on">$</span>@Html.TextBoxFor(m => m.Price, new { @class = "input-medium", size = 16})
	</div>
}

<script src="@Url.Content("~/Scripts/linkToProductPreview.js")"></script>

<script type="text/javascript">
	$(function () {
		$('#ProductUrl').linkToProductPreview({
			url: '@Url.Action("ParseProductUrl", "Order", new {Area = "Shop"})',
			loaderImage: '@Url.Content("~/Content/images/loader.gif")',
			productImageContainer: 'divProductImageContainer',
			productImageHidden: 'ImageUrl'
		});
	});
</script>

<div id="content">
	<h2>Add new order</h2>

	@using (Html.BeginForm("Add", "Order", FormMethod.Post, new { @class="form-inline" })) {
	<div class="row">
		
		<div class="span6">
			@Html.FormEditorFor(m => m.ProductUrl, "Product Url", "input-xxlarge")
			@Html.FormEditorFor(m => m.Name, "Product Name", "input-xxlarge")
			@Html.FormEditorFor(m => m.Description, "Description", "input-xxlarge")

			@Html.FormEditorFor(m => m.Price, "Price", PriceEditor())
			
			@Html.FormEditorFor(m => m.Size, "Size")
			@Html.FormEditorFor(m => m.Color, "Color")
			@Html.FormEditorFor(m => m.Quantity, "Quantity")

			@Html.Hidden("OrderId", Model.OrderId.Id)
			@Html.HiddenFor(m => m.Email)

			<input type="submit" class="btn btn-primary" value="Add"/>
		</div>
		<div class="span3">
			<div id="divProductImageContainer">
				@if (!String.IsNullOrWhiteSpace(Model.ImageUrl))
	{
					<img src="@Model.ImageUrl" />
	}
			</div>
			@Html.HiddenFor(m => m.ImageUrl)
		</div>
	</div>
 }
	<div class="row">
		@Html.Grid(Model.Items).Columns(column =>
		{
			column.For(x => !String.IsNullOrWhiteSpace(x.ImageUrl) 
								? MvcHtmlString.Create("<a href='"  + x.ProductUrl + "' target='_blank'><img style='height:40px;' src='" + x.ImageUrl + "' /></a>") 
								: MvcHtmlString.Empty);
			column.For(x => MvcHtmlString.Create("<a href='"  + x.ProductUrl + "' target='_blank'>" + x.Name + "</a>"));
			column.For(x => x.Size);
			column.For(x => x.Color);
			column.For(x => x.Price);
			column.For(x => x.Quantity);
			column.For(x => x.Total);
			column.For(x => Html.Command(new RemoveItemFromOrder(new OrderId(x.OrderId), new OrderItemId(x.ItemId)).WithEnvelope())).Encode(false);
		}).Attributes(@class => "table table-striped").Empty("Add some items to your order.")
	</div>

	@if(Model.Items.Any())
	{
		using (Html.BeginForm("Submit", "Order", FormMethod.Post)) {
			<div class="row">
				@Html.Hidden("OrderId", Model.OrderId.Id)

				<div class="span3 offset9">
					<strong>Total:</strong> @Model.Total 
				</div>
				<br />
				<br />
				<div class="span3 offset9">
					@if(String.IsNullOrWhiteSpace(Model.Email)) {
						@Html.FormEditorFor(m => m.Email, "Email")
					}
					else {
						@Html.HiddenFor(m => m.Email)
					}

					<input type="submit" class="btn btn-success" value="Submit"/>
				</div>
			</div>
		}
	}
</div>