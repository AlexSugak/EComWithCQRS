@using ECom.Site.Helpers
@using ECom.Site.Models
@using MvcContrib.UI.Grid;
@using ECom.Site.Core;

@model ECom.Site.Areas.Admin.Models.EventViewerViewModel
@{
    ViewBag.Title = "Event Viewer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@helper ArrowIcon(string field, string sort_field, string sort_order)
{
    if (field == sort_field)
    {
        if (sort_order == "ASC")
        {
            <img src="~/Content/images/sort_asc.png" alt="ASC" />
        }
        else
        {
            <img src="~/Content/images/sort_desc.png" alt="DESC" />
        }
    }
}

<div id="content" class="container-fluid">
    <h2>Event Viewer</h2>
    <br />

    @using (Html.BeginForm("Index", "EventViewer", FormMethod.Get, new { @class = "form-inline", @style = "border-bottom: solid 2px black; margin: 0;" }))
    {
        <div class="page-header" style="border-bottom: none;">
            @Html.Label("AggregateId", "Aggregate ID")
            @Html.TextBoxFor(model => model.AggregateId, new { @maxlength="36", @size="36", @class = "input-large" })

            <input type="submit" value="Search" class="btn btn-small" />
            <br />
        </div>
    }
        
    <div class="row-fluid">
        <div class="span7" style="border-right: solid 2px black;">
            @Html.Grid(Model.Events).Columns(column =>
            {
                column.For(x => x.AggregateId)
                    .Header(@<div>@Html.ActionLink("Aggregate Id", "Index", new { AggregateId = Model.AggregateId, sortField = "ID" })
                                @ArrowIcon("ID", ((SortFieldEnum)Session["SortField"]).ToString(), ((SortOrderEnum)Session["SortOrder"]).ToString())
                            </div>);
                column.For(x => x.EventName)
                    .Header(@<div>@Html.ActionLink("Event Name", "Index", new { AggregateId = Model.AggregateId, sortField = "NAME" })
                                @ArrowIcon("NAME", ((SortFieldEnum)Session["SortField"]).ToString(), ((SortOrderEnum)Session["SortOrder"]).ToString())
                             </div>);
                column.For(x => x.EventDate)
                    .Header(@<div>@Html.ActionLink("Event Date", "Index", new { AggregateId = Model.AggregateId, sortField = "DATE" })
                                @ArrowIcon("DATE", ((SortFieldEnum)Session["SortField"]).ToString(), ((SortOrderEnum)Session["SortOrder"]).ToString())
                             </div>);
            }).Attributes(new Dictionary<string, object>() { {"class", "table table-striped"}, {"id", "EventTable"} }).RowAttributes(data => new Dictionary<string, object>() { {"id", data.Item.EventVersion} })
     	
            @Html.BootPager(Model.Events)
        </div>
        <div id="detailsDiv" class="span5" style="margin-left: 20px;">
        </div>
    </div>
    
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#EventTable tbody tr").click(function () {
            var version = $(this).attr('id');
            var id = $(this).find("td:first").html();

            $("#EventTable tbody tr").css("font-weight", "");
            $(this).css("font-weight", "bold");

            $.ajax({
                url: '@Url.Action("Details","EventViewer")',
                type: 'GET',
                data: { aggregateId: id, version: version },
                success: function (data) { $("#detailsDiv").empty().append(data); },
                error: function() { alert("error"); }
            });
        })
    })
</script>
