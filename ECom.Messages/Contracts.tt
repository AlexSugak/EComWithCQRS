<#@ template language="C#" #>
<#@ assembly name="$(SolutionDir)\Libraries\MessageContracts.dll" #>
<#@ assembly name="$(SolutionDir)\ECom.Dsl\Bin\Debug\ECom.Dsl.dll" #>
<#@ import namespace="MessageContracts" #>
<#@ import namespace="ECom.Dsl" #>

using System;
using System.CodeDom.Compiler;

namespace ECom.Messages 
{
	<# var generator = new CommandsEventsGenerator();	
	var dsl = @"




// common args
let userId = UserId UserId;
let orderId = OrderId OrderId;
let orderItemId = OrderItemId OrderItemId;
let productId = ProductId ProductId;
let catalogId = CatalogId CatalogId;
let categoryName = string CategoryName;
let discountId = DiscountId DiscountId;
let name = string Name;
let quantity = int Quantity;
let email = EmailAddress Email;




// USER

UserCreated!(userId)

ReportUserLoggedIn?(userId, string UserName, string PhotoUrl)
UserLoggedInReported!(userId, string UserName, string PhotoUrl)

SetUserEmail?(userId, email)
UserEmailSet!(userId, email)



// ORDER

CreateNewOrder?(orderId, userId)
NewOrderCreated!(orderId, userId)

AddProductToOrder?(orderId, orderItemId, Uri ProductUri, string Name, string Description, decimal Price, int Quantity, string Size, string Color, Uri ImageUri)
ProductAddedToOrder!(orderId, orderItemId, Uri ProductUri, string Name, string Description, decimal Price, int Quantity, string Size, string Color, Uri ImageUri)

RemoveItemFromOrder?(orderId, orderItemId)
ItemRemovedFromOrder!(orderId, orderItemId)

SubmitOrder?(orderId)
OrderSubmited!(orderId, userId)









// CATALOG
AddProduct? (productId, name, decimal Price)
ProductAdded! (productId, name, decimal Price)

RemoveProduct? (productId)
ProductRemoved! (productId)

ChangeProductPrice? (productId, decimal NewPrice)
ProductPriceChanged! (productId, decimal NewPrice)

AddRelatedProduct? (productId, ProductId TargetProductId)
RelatedProductAdded! (productId, ProductId TargetProductId)

CreateCategory?(name)
CategoryCreated!(catalogId, name)

MoveCategory?(name, string TargetCategory)
CategoryMoved!(catalogId, name, string TargetCategory)

RemoveCategory?(name)
CategoryRemoved!(catalogId, name)

AddProductToCategory?(productId, categoryName)
ProductAddedToCategory!(productId, categoryName)



	";	#>
	<#= GeneratorUtil.Build(dsl, generator) #>
}